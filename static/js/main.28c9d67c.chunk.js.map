{"version":3,"sources":["diagrams.js","Diagram/Diagram.js","Diagram/index.js","Results/index.js","Results/Results.js","Quiz/index.js","Quiz/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","text","position","solution","from","to","Chess","require","Diagram","props","state","game","fen","toMove","solutionProgress","timer","timeLeft","allowDrag","bind","onDrop","updateTimeLeft","console","log","this","setState","setOrientation","updateToMove","time","setInterval","clearInterval","orientation","turn","Math","round","onTimeout","move","expectedMove","sourceSquare","targetSquare","length","moveToMake","updateGame","piece","source","game_over","substr","moveObj","target","promotion","isCorrectMove","isSolutionComplete","onCorrect","makeAutoMove","undo","onWrongMove","className","Component","Results","results","makeResults","data","finalResults","map","result","timeSpent","timeout","JSON","stringify","Quiz","questionNumber","currentData","totalQuestions","diagrams","solutions","updateData","correct","makeSolution","newSolutions","push","updateSolutions","isQuizFinished","onComplete","key","App","stage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yGAAAA,EAAOC,QAAU,CACf,CACEC,KAAM,YACNC,SAAU,gCACVC,SAAU,CACR,CACEC,KAAM,KACNC,GAAI,QAIV,CACEJ,KAAM,YACNC,SAAU,yCACVC,SAAU,CACR,CACEC,KAAM,KACNC,GAAI,MAEN,CACED,KAAM,KACNC,GAAI,MAEN,CACED,KAAM,KACNC,GAAI,QAIV,CACEJ,KAAM,oBACNC,SAAU,2DACVC,SAAU,CACR,CACEC,KAAM,KACNC,GAAI,MAEN,CACED,KAAM,KACNC,GAAI,MAEN,CACED,KAAM,KACNC,GAAI,MAEN,CACED,KAAM,KACNC,GAAI,MAEN,CACED,KAAM,KACNC,GAAI,MAEN,CACED,KAAM,KACNC,GAAI,MAEN,CACED,KAAM,KACNC,GAAI,MAEN,CACED,KAAM,KACNC,GAAI,MAEN,CACED,KAAM,KACNC,GAAI,QAIV,CACEJ,KAAM,YACNC,SAAU,oCACVC,SAAU,CACR,CACEC,KAAM,KACNC,GAAI,U,gPCzENC,G,MAAQC,EAAQ,KCFPC,E,YDKb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,KAAM,KACNC,IAAK,GACLC,OAAQ,KACRC,iBAAkB,EAClBC,MAAO,KACPC,SAAU,yCAEZ,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBACd,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBAZL,E,iFAcE,IAAD,OAClBG,QAAQC,IAAI,YACZD,QAAQC,IAAR,QAAqBC,KAAKd,OAC1B,IAAIE,EAAO,IAAIL,EAAMiB,KAAKd,MAAMP,UAC5BU,EAAMD,EAAKC,MACfW,KAAKC,SAAS,CAAEb,OAAMC,QAAO,WAC3B,EAAKa,iBACL,EAAKC,kBAEHH,KAAKd,MAAMkB,MACbJ,KAAKC,SAAS,CACZT,MAAOa,YAAYL,KAAKH,eAAgB,KACxCJ,SAAUO,KAAKd,MAAMkB,S,6CAKzBE,cAAcN,KAAKb,MAAMK,S,uCAGzB,GAAKQ,KAAKb,MAAMC,KAAhB,CAGA,IAAImB,EAAc,QACa,MAA3BP,KAAKb,MAAMC,KAAKoB,SAClBD,EAAc,SAEhBP,KAAKC,SAAS,CACZM,mB,uCAWF,IAAMd,EAAWgB,KAAKC,MAAMV,KAAKb,MAAMM,SAAW,GAClDO,KAAKC,SAAS,CAAER,aAPhB,WACMO,KAAKb,MAAMM,UAAY,IACzBa,cAAcN,KAAKb,MAAMK,OACzBQ,KAAKd,MAAMyB,WAAaX,KAAKd,MAAMyB,kB,qCAMzB,IACNvB,EAASY,KAAKb,MAAdC,KACR,IAAKA,EACH,OAAO,EAET,IAAIE,EAAS,gBACO,MAAhBF,EAAKoB,SACPlB,EAAS,iBAEXU,KAAKC,SAAS,CAAEX,a,oCAEJsB,GACZ,IAAMC,EAAeb,KAAKd,MAAMN,SAASoB,KAAKb,MAAMI,kBAEpD,OAAIsB,EAAahC,OAAS+B,EAAKE,cAAgBD,EAAa/B,KAAO8B,EAAKG,cACtEjB,QAAQC,IAAI,kBACL,IAEPD,QAAQC,IAAI,oBACL,K,2CAKT,OAAIC,KAAKb,MAAMI,mBAAqBS,KAAKd,MAAMN,SAASoC,QACtDlB,QAAQC,IAAI,uBACL,IAEPD,QAAQC,IAAI,6BACL,K,qCAITD,QAAQC,IAAI,oBADC,IAELX,EAASY,KAAKb,MAAdC,KACF6B,EAAajB,KAAKd,MAAMN,SAASoB,KAAKb,MAAMI,kBAClDH,EAAKwB,KAAKK,GACVjB,KAAKkB,WAAW9B,K,gCAER+B,EAAOC,GAAS,IAChBhC,EAASY,KAAKb,MAAdC,KAER,OAAIA,EAAKiC,eAEY,MAAhBjC,EAAKoB,QAA+C,MAA7BW,EAAMA,MAAMG,OAAO,EAAG,IAC/B,MAAhBlC,EAAKoB,QAA+C,MAA7BW,EAAMA,MAAMG,OAAO,EAAG,M,iCAKvClC,GAAO,IAAD,OACfY,KAAKC,SAAS,CAAEb,SAAQ,WACtB,EAAKa,SAAS,CAAEZ,IAAKD,EAAKC,QAAS,WACjC,EAAKY,SAAS,CAAEV,iBAAkB,EAAKJ,MAAMI,iBAAmB,GAAK,EAAKY,sB,6BAIzEoB,GACLzB,QAAQC,IAAIwB,GADE,IAERnC,EAASY,KAAKb,MAAdC,KACAgC,EAASG,EAAQT,aACjBU,EAASD,EAAQR,aACvB,OAAIK,IAAWI,EACN,WAQI,OALFpC,EAAKwB,KAAK,CACnB/B,KAAMuC,EACNtC,GAAI0C,EACJC,UAAW,MAGJ,WAEJzB,KAAK0B,cAAcH,IAMtBvB,KAAKkB,WAAW9B,QACZY,KAAK2B,sBACPrB,cAAcN,KAAKb,MAAMK,OACzBQ,KAAKd,MAAM0C,WAAa5B,KAAKd,MAAM0C,UAAU5B,KAAKb,MAAMM,WAExDO,KAAK6B,kBATP7B,KAAKb,MAAMC,KAAK0C,OAChB9B,KAAKd,MAAM6C,aAAe/B,KAAKd,MAAM6C,YAAY/B,KAAKb,MAAMM,UACrD,c,+BAYT,OACE,yBAAKuC,UAAU,qBACb,4BAAKhC,KAAKb,MAAMG,QAChB,2BAAIU,KAAKd,MAAMR,MACf,kBAAC,IAAD,CAAY6B,YAAaP,KAAKb,MAAMoB,YAAab,UAAWM,KAAKN,UAAWE,OAAQI,KAAKJ,OAAQjB,SAAUqB,KAAKb,MAAME,MACtH,yCAAeW,KAAKb,MAAMM,SAA1B,iB,GAxJ6BwC,a,iBEJtBC,G,kBCEb,WAAYhD,GAAQ,IAAD,8BACjB,4CAAMA,KACDiD,QAAU,EAAKC,cAFH,E,2EAIJ,IAAD,OACZ,IAAKpC,KAAKd,MAAMmD,KACd,OAAO,EAETvC,QAAQC,IAAIC,KAAKd,MAAMmD,KAAKF,SAC5B,IAAMG,EAAetC,KAAKd,MAAMmD,KAAKF,QAAQI,KAAI,SAAAC,GAI/C,OAHIA,EAAOC,YAAc,EAAKvD,MAAMmD,KAAKjC,OACvCoC,EAAOE,SAAU,GAEZF,KAET,MAAO,CACLpC,KAAMJ,KAAKd,MAAMmD,KAAKjC,KACtBkC,kB,+BAIF,OACE,yBAAKN,UAAU,qBACb,uCACA,6BAAMW,KAAKC,UAAU5C,KAAKmC,QAAS,KAAM,S,GAzBZF,cCDtBY,G,wBCIb,WAAY3D,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACX2D,eAAgB,EAChBC,YAAa,KACbC,eAAgB,EAAK9D,MAAM+D,SAASjC,OACpCkC,UAAW,IAEb,EAAKtB,UAAY,EAAKA,UAAUjC,KAAf,gBACjB,EAAKgB,UAAY,EAAKA,UAAUhB,KAAf,gBACjB,EAAKoC,YAAc,EAAKA,YAAYpC,KAAjB,gBAVF,E,0EAajB,IAAMoD,EAAc/C,KAAKd,MAAM+D,SAASjD,KAAKb,MAAM2D,gBAC7CA,EAAiB9C,KAAKb,MAAM2D,eAAiB,EACnD9C,KAAKC,SAAS,CACZ8C,cACAD,qB,0CAYF9C,KAAKmD,e,uCAGL,OAAOnD,KAAKb,MAAM2D,iBAAmB9C,KAAKd,MAAM+D,SAASjC,S,mCAE9CvB,EAAU2D,GACrBtD,QAAQC,IAAR,uCACA,IAAInB,EAAW,CACbwE,WAMF,OAJIpD,KAAKd,MAAMkB,OACbxB,EAAS6D,UAAYzC,KAAKd,MAAMkB,KAAOX,GAEzCK,QAAQC,IAAR,4BAAiCC,KAAKd,MAAMkB,KAA5C,yBAAiEX,IAC1Db,I,sCAEOa,EAAU2D,GACxB,IAAMxE,EAAWoB,KAAKqD,aAAa5D,EAAU2D,GACvCE,EAAetD,KAAKb,MAAM+D,UAChCI,EAAaC,KAAK3E,GAClBoB,KAAKC,SAAS,CAAEiD,UAAWI,M,iCAElB7D,EAAU2D,GAEnB,GADApD,KAAKwD,gBAAgB/D,EAAU2D,GAC3BpD,KAAKyD,iBAAkB,CACzB,IAAInB,EAAe,CACjBH,QAASnC,KAAKb,MAAM+D,UACpB9C,KAAMJ,KAAKd,MAAMkB,MAEnB,OAAOJ,KAAKd,MAAMwE,WAAWpB,GAE/BtC,KAAKmD,e,gCAEG1D,GACRO,KAAKkB,WAAWzB,GAAU,K,kCAG1BO,KAAKkB,WAAW,GAAG,K,kCAETzB,GACVO,KAAKkB,WAAWzB,GAAU,K,+BAI1B,OADAK,QAAQC,IAAR,2BAAwCC,KAAKb,MAAM4D,aAEjD,yBAAKf,UAAU,kBACb,4CAAkBhC,KAAKb,MAAM2D,eAA7B,WAAqD9C,KAAKb,MAAM6D,gBAC/DhD,KAAKb,MAAM4D,aACV,kBAAC,EAAD,eACEY,IAAK3D,KAAKb,MAAM2D,eAChB1C,KAAMJ,KAAKd,MAAMkB,KACjBwB,UAAW5B,KAAK4B,UAChBG,YAAa/B,KAAK+B,YAClBpB,UAAWX,KAAKW,WACZX,KAAKb,MAAM4D,mB,GApFOd,cCGb2B,E,YACnB,WAAY1E,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACX0E,MAAO,QAET,EAAKH,WAAa,EAAKA,WAAW/D,KAAhB,gBALD,E,wEAORwC,GACTnC,KAAKC,SAAS,CACZ4D,MAAO,UACP1B,c,+BAyBF,MArBqC,SAArBnC,KAAKb,MAAM0E,MACzB,kBAAC,EAAD,CACEzD,KAAM,EACNsD,WAAY1D,KAAK0D,WACjBT,SAAUA,MAGZ,kBAAC,EAAD,CAASZ,KAAMrC,KAAKb,MAAMgD,c,GAtBCF,aCIb6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.28c9d67c.chunk.js","sourcesContent":["module.exports = [\r\n  {\r\n    text: \"Mate in 1\",\r\n    position: \"8/8/5K1k/8/8/8/8/R7 w - - 0 1\",\r\n    solution: [\r\n      {\r\n        from: 'a1',\r\n        to: 'h1'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    text: \"Mate in 2\",\r\n    position: \"r2r3k/6pp/7N/3Q4/8/8/6PP/6K1 w - - 0 1\",\r\n    solution: [\r\n      {\r\n        from: 'd5',\r\n        to: 'g8'\r\n      },\r\n      {\r\n        from: 'd8',\r\n        to: 'g8'\r\n      },\r\n      {\r\n        from: 'h6',\r\n        to: 'f7'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    text: \"Play the Saemisch\",\r\n    position: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\r\n    solution: [\r\n      {\r\n        from: 'd2',\r\n        to: 'd4'\r\n      },\r\n      {\r\n        from: 'g8',\r\n        to: 'f6'\r\n      },\r\n      {\r\n        from: 'c2',\r\n        to: 'c4'\r\n      },\r\n      {\r\n        from: 'g7',\r\n        to: 'g6'\r\n      },\r\n      {\r\n        from: 'b1',\r\n        to: 'c3'\r\n      },\r\n      {\r\n        from: 'f8',\r\n        to: 'g7'\r\n      },\r\n      {\r\n        from: 'e2',\r\n        to: 'e4'\r\n      },\r\n      {\r\n        from: 'd7',\r\n        to: 'd6'\r\n      },\r\n      {\r\n        from: 'f2',\r\n        to: 'f3'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    text: \"Mate in 1\",\r\n    position: \"8/8/8/4n3/8/6k1/6b1/6K1 b - - 0 1\",\r\n    solution: [\r\n      {\r\n        from: 'e5',\r\n        to: 'f3'\r\n      }\r\n    ]\r\n  }\r\n]","import React, { Component } from 'react';\r\nimport Chessboard from 'chessboardjsx';\r\n// import Chess from 'chess.js';\r\nimport './Diagram.css';\r\nconst Chess = require('chess.js');\r\n\r\nexport default class Diagram extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      game: null,\r\n      fen: '',\r\n      toMove: null,\r\n      solutionProgress: 0,\r\n      timer: null,\r\n      timeLeft: <span>&infin;</span>\r\n    }\r\n    this.allowDrag = this.allowDrag.bind(this);\r\n    this.onDrop = this.onDrop.bind(this);\r\n    this.updateTimeLeft = this.updateTimeLeft.bind(this)\r\n  }\r\n  componentDidMount() {\r\n    console.log('didmount')\r\n    console.log(`props`, this.props)\r\n    let game = new Chess(this.props.position)\r\n    let fen = game.fen()\r\n    this.setState({ game, fen }, () => {\r\n      this.setOrientation()\r\n      this.updateToMove()\r\n    })\r\n    if (this.props.time) {\r\n      this.setState({\r\n        timer: setInterval(this.updateTimeLeft, 1000),\r\n        timeLeft: this.props.time\r\n      })\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.timer)\r\n  }\r\n  setOrientation() {\r\n    if (!this.state.game) {\r\n      return\r\n    }\r\n    let orientation = 'white';\r\n    if (this.state.game.turn() === 'b') {\r\n      orientation = 'black'\r\n    }\r\n    this.setState({\r\n      orientation\r\n    })\r\n\r\n  }\r\n  updateTimeLeft() {\r\n    function checkTime() {\r\n      if (this.state.timeLeft <= 0) {\r\n        clearInterval(this.state.timer)\r\n        this.props.onTimeout && this.props.onTimeout();\r\n      }\r\n    }\r\n    const timeLeft = Math.round(this.state.timeLeft - 1)\r\n    this.setState({ timeLeft }, checkTime)\r\n  }\r\n  updateToMove() {\r\n    const { game } = this.state;\r\n    if (!game) {\r\n      return false\r\n    }\r\n    let toMove = 'White to move'\r\n    if (game.turn() === 'b') {\r\n      toMove = 'Black to move'\r\n    }\r\n    this.setState({ toMove })\r\n  }\r\n  isCorrectMove(move) {\r\n    const expectedMove = this.props.solution[this.state.solutionProgress];\r\n    // return expectedMove.from === move.sourceSquare && expectedMove.to === move.targetSquare;\r\n    if (expectedMove.from === move.sourceSquare && expectedMove.to === move.targetSquare) {\r\n      console.log('correct move!')\r\n      return true\r\n    } else {\r\n      console.log('incorrect move!')\r\n      return false;\r\n    }\r\n  }\r\n  isSolutionComplete() {\r\n    // return this.state.solutionProgress === this.props.solution.length\r\n    if (this.state.solutionProgress === this.props.solution.length) {\r\n      console.log('solution complete!')\r\n      return true\r\n    } else {\r\n      console.log('still got moves to enter');\r\n      return false;\r\n    }\r\n  }\r\n  makeAutoMove() {\r\n    console.log('Auto making move')\r\n    const { game } = this.state;\r\n    const moveToMake = this.props.solution[this.state.solutionProgress]\r\n    game.move(moveToMake);\r\n    this.updateGame(game)\r\n  }\r\n  allowDrag(piece, source) {\r\n    const { game } = this.state;\r\n    // do not pick up pieces if the game is over\r\n    if (game.game_over()) return false\r\n    // only pick up pieces for the side to move\r\n    if ((game.turn() === 'w' && piece.piece.substr(0, 1) !== 'w') ||\r\n      (game.turn() === 'b' && piece.piece.substr(0, 1) !== 'b')) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n  updateGame(game) {\r\n    this.setState({ game }, () => {\r\n      this.setState({ fen: game.fen() }, () => {\r\n        this.setState({ solutionProgress: this.state.solutionProgress + 1 }, this.updateToMove)\r\n      })\r\n    })\r\n  }\r\n  onDrop(moveObj) {\r\n    console.log(moveObj)\r\n    let { game } = this.state;\r\n    const source = moveObj.sourceSquare;\r\n    const target = moveObj.targetSquare;\r\n    if (source === target) {\r\n      return 'snapback'\r\n    }\r\n    // see if the move is legal\r\n    let move = game.move({\r\n      from: source,\r\n      to: target,\r\n      promotion: 'q'\r\n    })\r\n    if (move === null) {\r\n      return 'snapback'\r\n    }\r\n    if (!this.isCorrectMove(moveObj)) {\r\n      // alert('ma sugi');\r\n      this.state.game.undo()\r\n      this.props.onWrongMove && this.props.onWrongMove(this.state.timeLeft)\r\n      return 'snapback'\r\n    } else {\r\n      this.updateGame(game)\r\n      if (this.isSolutionComplete()) {\r\n        clearInterval(this.state.timer)\r\n        this.props.onCorrect && this.props.onCorrect(this.state.timeLeft)\r\n      } else {\r\n        this.makeAutoMove()\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"diagram-container\">\r\n        <h5>{this.state.toMove}</h5>\r\n        <p>{this.props.text}</p>\r\n        <Chessboard orientation={this.state.orientation} allowDrag={this.allowDrag} onDrop={this.onDrop} position={this.state.fen} />\r\n        <p>Time left: {this.state.timeLeft} seconds</p>\r\n      </div>\r\n    )\r\n  }\r\n}","import Diagram from './Diagram';\r\n\r\nexport default Diagram;","import Results from './Results';\r\n\r\nexport default Results;","import React, { Component } from 'react';\r\nimport './Results.css';\r\n\r\nexport default class Results extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.results = this.makeResults();\r\n  }\r\n  makeResults() {\r\n    if (!this.props.data) {\r\n      return false\r\n    }\r\n    console.log(this.props.data.results)\r\n    const finalResults = this.props.data.results.map(result => {\r\n      if (result.timeSpent === this.props.data.time) {\r\n        result.timeout = true\r\n      }\r\n      return result\r\n    })\r\n    return {\r\n      time: this.props.data.time,\r\n      finalResults\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"results-container\">\r\n        <h4>Results</h4>\r\n        <pre>{JSON.stringify(this.results, null, 3)}</pre>\r\n      </div>\r\n    )\r\n  }\r\n}","import Quiz from './Quiz';\r\n\r\nexport default Quiz;","// TODO: rename solutions to answers\r\nimport React, { Component } from 'react';\r\nimport Diagram from '../Diagram';\r\nimport './Quiz.css';\r\n\r\nexport default class Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questionNumber: 0,\r\n      currentData: null,\r\n      totalQuestions: this.props.diagrams.length,\r\n      solutions: []\r\n    }\r\n    this.onCorrect = this.onCorrect.bind(this);\r\n    this.onTimeout = this.onTimeout.bind(this);\r\n    this.onWrongMove = this.onWrongMove.bind(this);\r\n  }\r\n  updateData() {\r\n    const currentData = this.props.diagrams[this.state.questionNumber]\r\n    const questionNumber = this.state.questionNumber + 1;\r\n    this.setState({\r\n      currentData,\r\n      questionNumber\r\n    })\r\n    // this.setState({\r\n    //   questionNumber: this.state.questionNumber + 1\r\n    // }, () => {\r\n    //   const currentData = this.props.diagrams[this.state.questionNumber - 1];\r\n    //   this.setState({\r\n    //     currentData\r\n    //   })\r\n    // })\r\n  }\r\n  componentDidMount() {\r\n    this.updateData()\r\n  }\r\n  isQuizFinished() {\r\n    return this.state.questionNumber === this.props.diagrams.length\r\n  }\r\n  makeSolution(timeLeft, correct) {\r\n    console.log(`8888888888 makeSolution 88888888888`)\r\n    let solution = {\r\n      correct,\r\n    }\r\n    if (this.props.time) {\r\n      solution.timeSpent = this.props.time - timeLeft;\r\n    }\r\n    console.log(`this.props.time = ${this.props.time} and timeLeft=${timeLeft}`)\r\n    return solution\r\n  }\r\n  updateSolutions(timeLeft, correct) {\r\n    const solution = this.makeSolution(timeLeft, correct);\r\n    const newSolutions = this.state.solutions;\r\n    newSolutions.push(solution);\r\n    this.setState({ solutions: newSolutions })\r\n  }\r\n  updateGame(timeLeft, correct) {\r\n    this.updateSolutions(timeLeft, correct);\r\n    if (this.isQuizFinished()) {\r\n      let finalResults = {\r\n        results: this.state.solutions,\r\n        time: this.props.time\r\n      }\r\n      return this.props.onComplete(finalResults)\r\n    }\r\n    this.updateData()\r\n  }\r\n  onCorrect(timeLeft) {\r\n    this.updateGame(timeLeft, true)\r\n  }\r\n  onTimeout() {\r\n    this.updateGame(0, false)\r\n  }\r\n  onWrongMove(timeLeft) {\r\n    this.updateGame(timeLeft, false)\r\n  }\r\n  render() {\r\n    console.log(`on quiz render, currdata`, this.state.currentData)\r\n    return (\r\n      <div className=\"quiz-container\">\r\n        <h3>Question no: {this.state.questionNumber} out of {this.state.totalQuestions}</h3>\r\n        {this.state.currentData &&\r\n          <Diagram\r\n            key={this.state.questionNumber}\r\n            time={this.props.time}\r\n            onCorrect={this.onCorrect}\r\n            onWrongMove={this.onWrongMove}\r\n            onTimeout={this.onTimeout}\r\n            {...this.state.currentData}\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Diagram from './Diagram/';\r\nimport diagrams from './diagrams';\r\nimport Results from './Results';\r\n\r\nimport './App.css'\r\nimport Quiz from './Quiz';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stage: 'quiz'\r\n    }\r\n    this.onComplete = this.onComplete.bind(this);\r\n  }\r\n  onComplete(results) {\r\n    this.setState({\r\n      stage: 'results',\r\n      results\r\n    })\r\n  }\r\n  render() {\r\n    const element = this.state.stage === 'quiz' ?\r\n      <Quiz\r\n        time={5}\r\n        onComplete={this.onComplete}\r\n        diagrams={diagrams}\r\n      />\r\n      :\r\n      <Results data={this.state.results} />\r\n    // <Diagram\r\n    //   // time={5}\r\n    //   onComplete={() => { console.log('ma sugi') }}\r\n    //   onTimeout={() => {console.log('timeout')}}\r\n    //   text=\"Play the KID Saemisch\"\r\n    //   position=\"rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 0 1\"\r\n    //   solution={[\r\n    //     {\r\n    //       from: 'd7',\r\n    //       to: 'd5'\r\n    //     }\r\n    //   ]} />\r\n    // <Results data={this.state.results} />\r\n    return (\r\n     element\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}